/*
Problem 44: Pentagon Numbers
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised;
What is the value of D?
*/

package problems

import "math"

const ANSWER_044 = 5482660

func pentagonNumber(n int) int {
	return n * (3*n - 1) / 2
}

func generatePentagons(limit int) []int {
	pents := make([]int, limit)
	for i := 0; i < limit; i++ {
		pents[i] = pentagonNumber(i + 1)
	}
	return pents
}

func isPentagon(n int) bool {
	pent := (math.Sqrt(24*float64(n)+1) + 1) / 6
	return math.Floor(pent) == pent
}

func abs(n int) int {
	if n < 0 {
		return -n
	}
	return n
}

func Euler044() int {
	limit := 3000
	pents := generatePentagons(limit)
	smallestD := 99999999
	for i, pentA := range pents {
		for j := i + 1; j < len(pents); j++ {
			pentB := pents[j]
			if isPentagon(pentB-pentA) && isPentagon(pentA+pentB) {
				d := abs(pentB - pentA)
				if d < smallestD {
					smallestD = d
				}
			}
		}
	}
	return smallestD
}
