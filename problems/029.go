/*
Problem 29: Distinct Powers
Consider all integer combinations of aᵇ for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
2²=4,  2³=8,   2⁴=16,  2⁴ = 32
3²=9,  3³=27,  3⁴=81,  3⁴ = 243
4²=16, 4³=64,  4⁴=256, 4⁴ = 1024
5²=25, 5³=125, 5⁴=625, 5⁴ = 3125
If they are then placed in numerical order, with any repeats removed,
we get the following sequence of 15 distinct terms:
4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by aᵇ for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/

package problems

import "math/big"

const ANSWER_029 = 9183

func getPowers(n int64) map[string]bool {
	powers := map[string]bool{}
	limit := big.NewInt(n)
	pow := big.NewInt(0)
	one := big.NewInt(1)

	for a := big.NewInt(2); a.Cmp(limit) != 1; a.Add(a, one) {
		for b := big.NewInt(2); b.Cmp(limit) != 1; b.Add(b, one) {
			powers[pow.Exp(a, b, nil).String()] = true
		}
	}
	return powers
}

func Euler029() int {
	powers := getPowers(100)
	return len(powers)
}
